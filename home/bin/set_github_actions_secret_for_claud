#!/bin/bash
set -euo pipefail

if [[ $# -ne 1 ]]; then
  echo "Usage: $0 <GitHubリポジトリ名（例: bannzai/DigitalDetox）>"
  exit 1
fi

GITHUB_REPOSITORY="$1"

if [[ -z "${KEYCHAIN_NAME_CLAUDE_CODE:-}" || -z "${KEYCHAIN_ACCOUNT_CLAUDE_CODE:-}" ]]; then
  echo "KEYCHAIN_NAME_CLAUDE_CODEとKEYCHAIN_ACCOUNT_CLAUDE_CODE環境変数をセットしてください"
  exit 1
fi

CLAUDE_SECRET_JSON=$(security find-generic-password -s "$KEYCHAIN_NAME_CLAUDE_CODE" -a "$KEYCHAIN_ACCOUNT_CLAUDE_CODE" -w)

if [[ -z "$CLAUDE_SECRET_JSON" ]]; then
  echo "KeychainからCLAUDE_SECRET_JSONの取得に失敗しました"
  exit 1
fi

ACCESS_TOKEN=$(echo "$CLAUDE_SECRET_JSON" | jq -r '.claudeAiOauth.accessToken')
REFRESH_TOKEN=$(echo "$CLAUDE_SECRET_JSON" | jq -r '.claudeAiOauth.refreshToken')
EXPIRES_AT=$(echo "$CLAUDE_SECRET_JSON" | jq -r '.claudeAiOauth.expiresAt')

prettydate() {
  local ts_ms=$1
  [[ -z $ts_ms ]] && { echo "usage: prettydate <epoch_ms>" >&2; return 1; }

  local sec=$((ts_ms/1000))
  local ms=$((ts_ms%1000))

  date -r "$sec" "+%Y-%m-%d %H:%M:%S.$(printf '%03d' "$ms")"
}

echo "Expires:"
echo "$(prettydate $EXPIRES_AT)"

gh secret set CLAUDE_ACCESS_TOKEN --repo "$GITHUB_REPOSITORY" --body "$ACCESS_TOKEN"
gh secret set CLAUDE_REFRESH_TOKEN --repo "$GITHUB_REPOSITORY" --body "$REFRESH_TOKEN"
gh secret set CLAUDE_EXPIRES_AT --repo "$GITHUB_REPOSITORY" --body "$EXPIRES_AT"

echo "Secrets updated successfully."
